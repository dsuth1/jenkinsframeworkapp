---
- name: Deploy ACR and Container Image
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Create an azure container registry
      azure_rm_containerregistry:
        name: "{{ lookup('env','ACR_NAME') }}"
        location: eastus
        resource_group: "{{ lookup('env','RESOURCE_GROUP') }}"
        state: present
        admin_user_enabled: true
        sku: Basic
      register: acrinfo
    - name: Log into Registry
      docker_login:
        username: "{{ lookup('env','AZURE_CLIENT_ID') }}"
        password: "{{ lookup('env','AZURE_SECRET') }}"
        registry: "{{ acrinfo.login_server }}"
        reauthorize: yes
      become: yes
      become_method: sudo
    - name: Build and push image to a private repo
      docker_image:
        name: "{{ lookup('env','IMAGE_NAME') }}"
        repository: "{{ acrinfo.login_server }}/{{ lookup('env','IMAGE_NAME') }}"
        tag: latest
        force: yes
        pull: no
        push: yes
        debug: yes
        path: ./
      become: yes
      become_method: sudo
    - name: Create an azure kubernetes service
      azure_rm_aks:
        name: "{{ lookup('env','AKS_NAME') }}"
        location: eastus
        resource_group: "{{ lookup('env','RESOURCE_GROUP') }}"
        dns_prefix: "{{ lookup('env','DNS_PREFIX') }}"
        linux_profile:
          admin_username: normaluser
          ssh_key: "{{ lookup('file', '/var/jenkins_home/.ssh/id_rsa.pub') }}"
        service_principal:
          client_id: "{{ lookup('env','AZURE_CLIENT_ID') }}"
          client_secret: "{{ lookup('env','AZURE_SECRET') }}"
        agent_pool_profiles:
          - name: default
            count: 1
            vm_size: Standard_D2_v2
    - name: Get facts for one Azure Kubernetes Service
      azure_rm_aks_facts:
        name: "{{ lookup('env','AKS_NAME') }}"
        resource_group: "{{ lookup('env','RESOURCE_GROUP') }}"
      register: aksinfo
    - debug: var=aksinfo
    - name: Blah
      k8s:
        host: "{{ aksinfo.aks.properties.fqdn }}"
        username: "{{ lookup('env','AZURE_CLIENT_ID') }}"
        password: "{{ lookup('env','AZURE_SECRET') }}"
        state: present
        definition:
          containers:
           - name: "{{ lookup('env','IMAGE_NAME') }}"
             image: "{{ acrinfo.login_server }}/{{ lookup('env','IMAGE_NAME') }}:latest"
          
